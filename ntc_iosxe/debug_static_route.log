$ terraform apply -auto-approve
iosxe_interface_loopback.interface_loopback: Refreshing state... [id=Cisco-IOS-XE-native:native/interface/Loopback=999]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # iosxe_static_route.static_route will be created
  + resource "iosxe_static_route" "static_route" {
      + device    = "sandbox-iosxe-recomm-1.cisco.com"
      + id        = (known after apply)
      + mask      = "255.255.255.0"
      + next_hops = [
          + {
              + global    = false
              + metric    = 10
              + name      = "terraform_route"
              + next_hop  = "10.0.0.1"
              + permanent = true
              + tag       = 100
            },
        ]
      + prefix    = "10.0.0.10"
    }

Plan: 1 to add, 0 to change, 0 to destroy.
iosxe_static_route.static_route: Creating...
╷
│ Error: Plugin did not respond
│ 
│ The plugin encountered an error, and failed to respond to the plugin6.(*GRPCProvider).ApplyResourceChange call. The
│ plugin logs may contain more details.
╵

Stack trace from the terraform-provider-iosxe_v0.1.4 plugin:

panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x1596ffe]

goroutine 25 [running]:
github.com/netascode/go-restconf.(*Client).Discovery(0x0, {0x8?, 0xc0000f1d08?, 0x106d2af?})
	github.com/netascode/go-restconf@v0.1.6/client.go:376 +0x3e
github.com/netascode/go-restconf.(*Client).PatchData(0x0, {0xc00023ad80, 0x46}, {0xc000358000, 0xca}, {0x0, 0x0, _})
	github.com/netascode/go-restconf@v0.1.6/client.go:479 +0x9f
github.com/netascode/terraform-provider-iosxe/internal/provider.resourceStaticRoute.Create({{_, _, {_, _}}}, {_, _}, {{{{0x18c6e90, 0xc0000e4b70}, {0x16dca80, 0xc0000b5860}}, ...}, ...}, ...)
	github.com/netascode/terraform-provider-iosxe/internal/provider/resource_iosxe_static_route.go:139 +0x34c
github.com/hashicorp/terraform-plugin-framework/internal/proto6server.(*Server).applyResourceChange(0xc00028cf80, {0x18c4030, 0xc0000b5020}, 0xc0004f0cd0, 0xc0000f35a8)
	github.com/hashicorp/terraform-plugin-framework@v0.8.0/internal/proto6server/serve.go:1261 +0x2e83
github.com/hashicorp/terraform-plugin-framework/internal/proto6server.(*Server).ApplyResourceChange(0x18c3f88?, {0x18c3f88?, 0xc00028d640?}, 0xc0004f0cd0)
	github.com/hashicorp/terraform-plugin-framework@v0.8.0/internal/proto6server/serve.go:1127 +0x9d
github.com/hashicorp/terraform-plugin-go/tfprotov6/tf6server.(*server).ApplyResourceChange(0xc0002a4f00, {0x18c4030?, 0xc0000b4840?}, 0xc000130460)
	github.com/hashicorp/terraform-plugin-go@v0.9.0/tfprotov6/tf6server/server.go:810 +0x515
github.com/hashicorp/terraform-plugin-go/tfprotov6/internal/tfplugin6._Provider_ApplyResourceChange_Handler({0x1779700?, 0xc0002a4f00}, {0x18c4030, 0xc0000b4840}, 0xc000268840, 0x0)
	github.com/hashicorp/terraform-plugin-go@v0.9.0/tfprotov6/internal/tfplugin6/tfplugin6_grpc.pb.go:385 +0x170
google.golang.org/grpc.(*Server).processUnaryRPC(0xc000364700, {0x18c6ff0, 0xc00021a4e0}, 0xc0000ca360, 0xc000397c20, 0x1cc3d20, 0x0)
	google.golang.org/grpc@v1.45.0/server.go:1282 +0xccf
google.golang.org/grpc.(*Server).handleStream(0xc000364700, {0x18c6ff0, 0xc00021a4e0}, 0xc0000ca360, 0x0)
	google.golang.org/grpc@v1.45.0/server.go:1619 +0xa1b
google.golang.org/grpc.(*Server).serveStreams.func1.2()
	google.golang.org/grpc@v1.45.0/server.go:921 +0x98
created by google.golang.org/grpc.(*Server).serveStreams.func1
	google.golang.org/grpc@v1.45.0/server.go:919 +0x28a

Error: The terraform-provider-iosxe_v0.1.4 plugin crashed!

This is always indicative of a bug within the plugin. It would be immensely
helpful if you could report the crash with the plugin's maintainers so that it
can be fixed. The output above should help diagnose the issue.